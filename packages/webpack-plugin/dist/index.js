import{accessSync as S,constants as H,readFileSync as m,writeFileSync as P}from"fs";import{resolve as C}from"path";import{DIRECTORY_NAME as l,INJECT_SCRIPT_FILE_NAME as d,INJECT_STYLE_FILE_NAME as F,JSON_FILE_NAME as I,NOTIFICATION_ANCHOR_CLASS_NAME as T,generateJSONFileContent as A,generateJsFileContent as L,getFileHash as _,getVersion as j,get__Dirname as y}from"@plugin-ofs-web-update-notification/core";var g="WebUpdateNotificationPlugin";function v(N,e,o,{cssFileHash:r,jsFileHash:c}){let{customNotificationHTML:a,hiddenDefaultNotification:n,injectFileBase:p="/"}=o,h=`<script>window.pluginWebUpdateNotice_version = '${e}';</script>`,u=a||n?"":`<link rel="stylesheet" href="${p}${l}/${F}.${r}.css">`,t=N;return t=t.replace("<head>",`<head>
    ${u}
    <script src="${p}${l}/${d}.${c}.js"></script>

    ${h}`),n||(t=t.replace("</body>",`<div class="${T}"></div></body>`)),t}var E=class{constructor(e){this.options=e||{}}apply(e){let o="",r="",{publicPath:c}=e.options.output;this.options.injectFileBase===void 0&&(this.options.injectFileBase=typeof c=="string"?c:"/");let{hiddenDefaultNotification:a,versionType:n,indexHtmlFilePath:p,customVersion:h,silence:u}=this.options,t="";n==="custom"?t=j(n,h):t=j(n),e.hooks.emit.tap(g,i=>{let s=A(t,u);if(i.assets[`${l}/${I}.json`]={source:()=>s,size:()=>s.length},!a){let $=m(`${y()}/${F}.css`,"utf8");r=_($),i.assets[`${l}/${F}.${r}.css`]={source:()=>$,size:()=>$.length}}let O=C(`${y()}/${d}.js`),f=L(m(O,"utf8").toString(),t,this.options);o=_(f),i.assets[`${l}/${d}.${o}.js`]={source:()=>f,size:()=>f.length}}),e.hooks.afterEmit.tap(g,()=>{let i=C(e.outputPath,p||"./index.html");try{S(i,H.F_OK);let s=m(i,"utf8");s=v(s,t,this.options,{jsFileHash:o,cssFileHash:r}),P(i,s)}catch(s){console.error(s),console.error(`${g} failed to inject the plugin into the HTML file. index.html\uFF08${i}\uFF09 not found.`)}})}};export{E as WebUpdateNotificationPlugin};
//# sourceMappingURL=index.js.map