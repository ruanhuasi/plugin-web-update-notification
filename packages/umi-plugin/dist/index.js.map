{"version":3,"sources":["../src/index.ts","../package.json"],"sourcesContent":["import { resolve } from 'path'\r\nimport { copyFileSync, mkdirSync, readFileSync, writeFileSync } from 'fs'\r\nimport type { IApi } from 'umi'\r\nimport type { Options } from '@plugin-ofs-web-update-notification/core'\r\nimport {\r\n  DIRECTORY_NAME,\r\n  INJECT_SCRIPT_FILE_NAME,\r\n  INJECT_STYLE_FILE_NAME,\r\n  JSON_FILE_NAME,\r\n  NOTIFICATION_ANCHOR_CLASS_NAME,\r\n  generateJSONFileContent,\r\n  generateJsFileContent,\r\n  getFileHash,\r\n  getVersion,\r\n} from '@plugin-ofs-web-update-notification/core'\r\nimport { name as pkgName } from '../package.json'\r\n\r\nexport type { Options } from '@plugin-ofs-web-update-notification/core'\r\n\r\nconst injectVersionTpl = (version: string) => {\r\n  return `window.pluginWebUpdateNotice_version = '${version}';`\r\n}\r\n\r\nexport default (api: IApi) => {\r\n  api.describe({\r\n    key: 'webUpdateNotification',\r\n    config: {\r\n      schema(Joi) {\r\n        return Joi.object({\r\n          versionType: Joi.string(),\r\n          customVersion: Joi.string(),\r\n          /** polling interval（ms）, default 10*60*1000 */\r\n          checkInterval: Joi.number(),\r\n          /** whether to output version in console */\r\n          logVersion: Joi.boolean(),\r\n          checkOnWindowFocus: Joi.boolean(),\r\n          checkImmediately: Joi.boolean(),\r\n          checkOnLoadFileError: Joi.boolean(),\r\n          injectFileBase: Joi.string(),\r\n          customNotificationHTML: Joi.string(),\r\n          notificationProps: {\r\n            title: Joi.string(),\r\n            description: Joi.string(),\r\n            buttonText: Joi.string(),\r\n            dismissButtonText: Joi.string(),\r\n          },\r\n          notificationConfig: {\r\n            primaryColor: Joi.string(),\r\n            secondaryColor: Joi.string(),\r\n            placement: Joi.string(),\r\n          },\r\n          silence: Joi.boolean(),\r\n          locale: Joi.string(),\r\n          localeData: Joi.object(),\r\n          hiddenDefaultNotification: Joi.boolean(),\r\n          hiddenDismissButton: Joi.boolean(),\r\n        })\r\n      },\r\n    },\r\n    enableBy() {\r\n      return api.env === 'production' && api?.userConfig.webUpdateNotification\r\n    },\r\n  })\r\n\r\n  const webUpdateNotificationOptions = (api.userConfig?.webUpdateNotification || {}) as Options\r\n  if (webUpdateNotificationOptions.injectFileBase === undefined)\r\n    webUpdateNotificationOptions.injectFileBase = api.userConfig.publicPath || '/'\r\n\r\n  const { versionType, customNotificationHTML, hiddenDefaultNotification, injectFileBase = '/', customVersion, silence } = webUpdateNotificationOptions\r\n\r\n  let version = ''\r\n  if (versionType === 'custom')\r\n    version = getVersion(versionType, customVersion!)\r\n  else\r\n    version = getVersion(versionType!)\r\n\r\n  // 插件只在生产环境时生效\r\n  if (!version || api.env !== 'production')\r\n    return\r\n\r\n  const jsFlePath = resolve('node_modules', pkgName, 'dist', `${INJECT_SCRIPT_FILE_NAME}.js`)\r\n  const jsFileContent = generateJsFileContent(\r\n    readFileSync(jsFlePath, 'utf8').toString(),\r\n    version,\r\n    webUpdateNotificationOptions,\r\n  )\r\n  /** inject script file hash */\r\n  const jsFileHash = getFileHash(jsFileContent)\r\n\r\n  const cssFilePath = resolve('node_modules', pkgName, 'dist', `${INJECT_STYLE_FILE_NAME}.css`)\r\n  /** inject css file hash */\r\n  const cssFileHash = getFileHash(readFileSync(cssFilePath, 'utf8').toString())\r\n\r\n  api.addHTMLLinks(() => {\r\n    if (customNotificationHTML || hiddenDefaultNotification)\r\n      return []\r\n\r\n    return [\r\n      {\r\n        rel: 'stylesheet',\r\n        href: `${injectFileBase}${DIRECTORY_NAME}/${INJECT_STYLE_FILE_NAME}.${cssFileHash}.css`,\r\n      },\r\n    ]\r\n  })\r\n\r\n  api.addHTMLHeadScripts(() => {\r\n    const scriptList = []\r\n    scriptList.push({\r\n      content: injectVersionTpl(version),\r\n    })\r\n    scriptList.push({\r\n      src: `${injectFileBase}${DIRECTORY_NAME}/${INJECT_SCRIPT_FILE_NAME}.${jsFileHash}.js`,\r\n    })\r\n    return scriptList\r\n  })\r\n\r\n  api.onBuildComplete(() => {\r\n    const outputPath = resolve(api.userConfig.outputPath || 'dist')\r\n    mkdirSync(`${outputPath}/${DIRECTORY_NAME}`)\r\n\r\n    // copy file from @plugin-web-update-notification/core/dist/??.css */ to dist/\r\n    copyFileSync(cssFilePath, `${outputPath}/${DIRECTORY_NAME}/${INJECT_STYLE_FILE_NAME}.${cssFileHash}.css`)\r\n\r\n    // write js file to dist/\r\n    writeFileSync(`${outputPath}/${DIRECTORY_NAME}/${INJECT_SCRIPT_FILE_NAME}.${jsFileHash}.js`, jsFileContent)\r\n\r\n    // write version json file to dist/\r\n    writeFileSync(`${outputPath}/${DIRECTORY_NAME}/${JSON_FILE_NAME}.json`, generateJSONFileContent(version, silence))\r\n  })\r\n\r\n  api.modifyHTML(($) => {\r\n    if (!hiddenDefaultNotification)\r\n      $('body').append(`<div class=\"${NOTIFICATION_ANCHOR_CLASS_NAME}\"></div>`)\r\n    return $\r\n  })\r\n}\r\n","{\r\n  \"name\": \"@plugin-ofs-web-update-notification/umijs\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Umi plugin for detect web page updates and notify.\",\r\n  \"author\": \"Utopia\",\r\n  \"license\": \"MIT\",\r\n  \"homepage\": \"https://github.com/GreatAuk/plugin-web-update-notification\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/GreatAuk/plugin-web-update-notification\",\r\n    \"directory\": \"packages/umi-plugin\"\r\n  },\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/GreatAuk/plugin-web-update-notification/issues\"\r\n  },\r\n  \"keywords\": [\r\n    \"umi\",\r\n    \"umi-plugin\",\r\n    \"@plugin-ofs-web-update-notification/core\",\r\n    \"ofs-web-update-notification\"\r\n  ],\r\n  \"sideEffects\": false,\r\n  \"exports\": {\r\n    \".\": {\r\n      \"types\": \"./dist/index.d.ts\",\r\n      \"require\": \"./dist/index.js\",\r\n      \"import\": \"./dist/index.mjs\"\r\n    }\r\n  },\r\n  \"main\": \"dist/index.js\",\r\n  \"module\": \"dist/index.mjs\",\r\n  \"types\": \"dist/index.d.ts\",\r\n  \"files\": [\r\n    \"dist\"\r\n  ],\r\n  \"scripts\": {\r\n    \"start\": \"tsx src/index.ts\",\r\n    \"build\": \"tsup\",\r\n    \"dev\": \"tsup --watch\"\r\n  },\r\n  \"peerDependencies\": {\r\n    \"umi\": \"*\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@plugin-ofs-web-update-notification/core\": \"workspace:*\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"umi\": \"^4.0.2\"\r\n  }\r\n}\r\n"],"mappings":"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","names":["src_exports","__export","src_default","__toCommonJS","import_path","import_fs","import_core","name","injectVersionTpl","version","src_default","api","Joi","webUpdateNotificationOptions","versionType","customNotificationHTML","hiddenDefaultNotification","injectFileBase","customVersion","silence","jsFlePath","name","jsFileContent","jsFileHash","cssFilePath","cssFileHash","scriptList","outputPath","$"]}