import{accessSync as S,constants as A,readFileSync as g,writeFileSync as P}from"fs";import{resolve as _}from"path";import{DIRECTORY_NAME as p,INJECT_SCRIPT_FILE_NAME as F,INJECT_STYLE_FILE_NAME as N,JSON_FILE_NAME as H,NOTIFICATION_ANCHOR_CLASS_NAME as I,generateJSONFileContent as T,generateJsFileContent as L,getFileHash as C,getVersion as j,get__Dirname as y}from"@plugin-ofs-web-update-notification/core";var m="WebUpdateNotificationPlugin";function v(i,t,o,{cssFileHash:r,jsFileHash:a}){let{hiddenDefaultNotification:h,injectFileBase:s="/"}=o,u=`<script>window.pluginWebUpdateNotice_version = '${t}';</script>`,f=h?"":`<link rel="stylesheet" href="${s}${p}/${N}.${r}.css">`;return i=i.replace("</head>",`${f}
    <script src="${s}${p}/${F}.${a}.js"></script>
    ${u}
    </head>`),h||(i=i.replace("</body>",`<div class="${I}"></div></body>`)),i}var E=class{constructor(t){this.options=t||{}}apply(t){let o="",r="",{publicPath:a}=t.options.output;this.options.injectFileBase===void 0&&(this.options.injectFileBase=typeof a=="string"?a:"/");let{hiddenDefaultNotification:h,versionType:s,indexHtmlFilePath:u,customVersion:f,silence:O}=this.options,c="";s==="custom"?c=j(s,f):c=j(s),t.hooks.emit.tap(m,l=>{let e=T(c,O);if(l.emitAsset[`${p}/${H}.json`]={source:()=>e,size:()=>e.length},!h){let d=g(`${y()}/${N}.css`,"utf8");r=C(d),l.emitAsset[`${p}/${N}.${r}.css`]={source:()=>d,size:()=>d.length}}let n=_(`${y()}/${F}.js`),$=L(g(n,"utf8").toString(),c,this.options);o=C($),l.emitAsset[`${p}/${F}.${o}.js`]={source:()=>$,size:()=>$.length}}),t.hooks.afterEmit.tap(m,()=>{let l=t.options.output.path||"./dist",e=_(l,u||"./index.html");try{S(e,A.F_OK);let n=g(e,"utf8");n=v(n,c,this.options,{jsFileHash:o,cssFileHash:r}),P(e,n)}catch{console.error(`${m} failed to inject the plugin into the HTML file. index.html (${e}) not found.`)}})}};export{E as WebUpdateNotificationPlugin};
//# sourceMappingURL=index.js.map