{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { readFileSync } from 'fs'\r\nimport { resolve } from 'path'\r\nimport type { Plugin, ResolvedConfig } from 'vite'\r\nimport type { Options } from '@plugin-ofs-web-update-notification/core'\r\n\r\nimport {\r\n  DIRECTORY_NAME,\r\n  INJECT_SCRIPT_FILE_NAME,\r\n  INJECT_STYLE_FILE_NAME,\r\n  JSON_FILE_NAME,\r\n  NOTIFICATION_ANCHOR_CLASS_NAME,\r\n  generateJSONFileContent,\r\n  generateJsFileContent,\r\n  getFileHash,\r\n  getVersion,\r\n  get__Dirname,\r\n} from '@plugin-ofs-web-update-notification/core'\r\n\r\n// /**\r\n//  * Get the version of the current Vite\r\n//  *\r\n//  * if the viteVersion is undefined, we assume that vite is less than v3.0（after v3.0, vite export version）\r\n//  */\r\n// async function getViteVersion(): Promise<string | undefined> {\r\n//   return await import('vite').then(({ version }) => version)\r\n// }\r\n\r\n/**\r\n * It injects the hash into the HTML, and injects the notification anchor and the stylesheet and the\r\n * script into the HTML\r\n * @param {string} html - The original HTML of the page\r\n * @param {string} version - The hash of the current commit\r\n * @param {Options} options - Options\r\n * @returns The html of the page with the injected script and css.\r\n */\r\nfunction injectPluginHtml(\r\n  html: string,\r\n  version: string,\r\n  options: Options,\r\n  { cssFileHash, jsFileHash }: { jsFileHash: string; cssFileHash: string },\r\n) {\r\n  const { customNotificationHTML, hiddenDefaultNotification, injectFileBase = '' } = options\r\n\r\n  const versionScript = `<script>window.pluginWebUpdateNotice_version = '${version}';</script>`\r\n  const cssLinkHtml = customNotificationHTML || hiddenDefaultNotification ? '' : `<link rel=\"stylesheet\" href=\"${injectFileBase}${DIRECTORY_NAME}/${INJECT_STYLE_FILE_NAME}.${cssFileHash}.css\">`\r\n  let res = html\r\n\r\n  res = res.replace(\r\n    '<head>',\r\n    `<head>\r\n    ${cssLinkHtml}\r\n    <script src=\"${injectFileBase}${DIRECTORY_NAME}/${INJECT_SCRIPT_FILE_NAME}.${jsFileHash}.js\"></script>\r\n    ${versionScript}`,\r\n  )\r\n\r\n  if (!hiddenDefaultNotification) {\r\n    res = res.replace(\r\n      '</body>',\r\n      `<div class=\"${NOTIFICATION_ANCHOR_CLASS_NAME}\"></div></body>`,\r\n    )\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nexport function webUpdateNotice(options: Options = {}): Plugin {\r\n  let viteConfig: ResolvedConfig\r\n  // let viteVersion: string | undefined\r\n\r\n  const { versionType, customVersion, silence } = options\r\n  let version = ''\r\n  if (versionType === 'custom')\r\n    version = getVersion(versionType, customVersion!)\r\n  else\r\n    version = getVersion(versionType!)\r\n\r\n  /** inject script file hash */\r\n  let jsFileHash = ''\r\n  /** inject css file hash */\r\n  let cssFileHash = ''\r\n\r\n  const cssFileSource = readFileSync(`${resolve(get__Dirname(), INJECT_STYLE_FILE_NAME)}.css`, 'utf8').toString()\r\n  cssFileHash = getFileHash(cssFileSource)\r\n\r\n  let jsFileSource = ''\r\n\r\n  return {\r\n    name: 'vue-vite-web-update-notice',\r\n    apply: 'build',\r\n    enforce: 'post',\r\n    async configResolved(resolvedConfig: ResolvedConfig) {\r\n      // 存储最终解析的配置\r\n      viteConfig = resolvedConfig\r\n      if (options.injectFileBase === undefined)\r\n        options.injectFileBase = viteConfig.base\r\n\r\n      jsFileSource = generateJsFileContent(\r\n        readFileSync(`${resolve(get__Dirname(), INJECT_SCRIPT_FILE_NAME)}.js`, 'utf8').toString(),\r\n        version,\r\n        options,\r\n      )\r\n      jsFileHash = getFileHash(jsFileSource)\r\n\r\n      // viteVersion = await getViteVersion()\r\n    },\r\n    generateBundle(_, bundle = {}) {\r\n      if (!version)\r\n        return\r\n      // inject version json file\r\n      bundle[JSON_FILE_NAME] = {\r\n        // @ts-expect-error: for Vite 3 support, Vite 4 has removed `isAsset` property\r\n        isAsset: true,\r\n        type: 'asset',\r\n        name: undefined,\r\n        source: generateJSONFileContent(version, silence),\r\n        fileName: `${DIRECTORY_NAME}/${JSON_FILE_NAME}.json`,\r\n      }\r\n\r\n      // inject css file\r\n      bundle[INJECT_STYLE_FILE_NAME] = {\r\n        // @ts-expect-error: for Vite 3 support, Vite 4 has removed `isAsset` property\r\n        isAsset: true,\r\n        type: 'asset',\r\n        name: undefined,\r\n        source: cssFileSource,\r\n        fileName: `${DIRECTORY_NAME}/${INJECT_STYLE_FILE_NAME}.${cssFileHash}.css`,\r\n      }\r\n\r\n      // inject js file\r\n      bundle[INJECT_SCRIPT_FILE_NAME] = {\r\n        // @ts-expect-error: for Vite 3 support, Vite 4 has removed `isAsset` property\r\n        isAsset: true,\r\n        type: 'asset',\r\n        name: undefined,\r\n        source: jsFileSource,\r\n        fileName: `${DIRECTORY_NAME}/${INJECT_SCRIPT_FILE_NAME}.${jsFileHash}.js`,\r\n      }\r\n    },\r\n    transformIndexHtml:\r\n    // if the viteVersion is undefined, we assume that vite is less than v3.0（after v3.0, vite export version）\r\n    // viteVersion === undefined\r\n    //   ? {\r\n\r\n        {\r\n          order: 'post',\r\n          handler(html: string, { chunk }) {\r\n            if (version && chunk)\r\n              return injectPluginHtml(html, version, options, { jsFileHash, cssFileHash })\r\n            return html\r\n          },\r\n          enforce: 'post', // deprecated since Vite 4\r\n          async transform(html: string) { // deprecated since Vite 4\r\n            if (version)\r\n              return injectPluginHtml(html, version, options, { jsFileHash, cssFileHash })\r\n            return html\r\n          },\r\n        },\r\n  }\r\n}\r\n"],"mappings":"yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,qBAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA6B,cAC7BC,EAAwB,gBAIxBC,EAWO,oDAmBP,SAASC,EACPC,EACAC,EACAC,EACA,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAC1B,CACA,GAAM,CAAE,uBAAAC,EAAwB,0BAAAC,EAA2B,eAAAC,EAAiB,EAAG,EAAIL,EAE7EM,EAAgB,mDAAmDP,eACnEQ,EAAcJ,GAA0BC,EAA4B,GAAK,gCAAgCC,IAAiB,oBAAkB,4BAA0BJ,UACxKO,EAAMV,EAEV,OAAAU,EAAMA,EAAI,QACR,SACA;AAAA,MACED;AAAA,mBACaF,IAAiB,oBAAkB,6BAA2BH;AAAA,MAC3EI,GACJ,EAEKF,IACHI,EAAMA,EAAI,QACR,UACA,eAAe,iDACjB,GAGKA,CACT,CAEO,SAAShB,EAAgBQ,EAAmB,CAAC,EAAW,CAC7D,IAAIS,EAGE,CAAE,YAAAC,EAAa,cAAAC,EAAe,QAAAC,CAAQ,EAAIZ,EAC5CD,EAAU,GACVW,IAAgB,SAClBX,KAAU,cAAWW,EAAaC,CAAc,EAEhDZ,KAAU,cAAWW,CAAY,EAGnC,IAAIR,EAAa,GAEbD,EAAc,GAEZY,KAAgB,gBAAa,MAAG,cAAQ,gBAAa,EAAG,wBAAsB,QAAS,MAAM,EAAE,SAAS,EAC9GZ,KAAc,eAAYY,CAAa,EAEvC,IAAIC,EAAe,GAEnB,MAAO,CACL,KAAM,6BACN,MAAO,QACP,QAAS,OACT,MAAM,eAAeC,EAAgC,CAEnDN,EAAaM,EACTf,EAAQ,iBAAmB,SAC7BA,EAAQ,eAAiBS,EAAW,MAEtCK,KAAe,4BACb,gBAAa,MAAG,cAAQ,gBAAa,EAAG,yBAAuB,OAAQ,MAAM,EAAE,SAAS,EACxFf,EACAC,CACF,EACAE,KAAa,eAAYY,CAAY,CAGvC,EACA,eAAeE,EAAGC,EAAS,CAAC,EAAG,CACxBlB,IAGLkB,EAAO,gBAAc,EAAI,CAEvB,QAAS,GACT,KAAM,QACN,KAAM,OACN,UAAQ,2BAAwBlB,EAASa,CAAO,EAChD,SAAU,GAAG,oBAAkB,uBACjC,EAGAK,EAAO,wBAAsB,EAAI,CAE/B,QAAS,GACT,KAAM,QACN,KAAM,OACN,OAAQJ,EACR,SAAU,GAAG,oBAAkB,4BAA0BZ,OAC3D,EAGAgB,EAAO,yBAAuB,EAAI,CAEhC,QAAS,GACT,KAAM,QACN,KAAM,OACN,OAAQH,EACR,SAAU,GAAG,oBAAkB,6BAA2BZ,MAC5D,EACF,EACA,mBAKI,CACE,MAAO,OACP,QAAQJ,EAAc,CAAE,MAAAoB,CAAM,EAAG,CAC/B,OAAInB,GAAWmB,EACNrB,EAAiBC,EAAMC,EAASC,EAAS,CAAE,WAAAE,EAAY,YAAAD,CAAY,CAAC,EACtEH,CACT,EACA,QAAS,OACT,MAAM,UAAUA,EAAc,CAC5B,OAAIC,EACKF,EAAiBC,EAAMC,EAASC,EAAS,CAAE,WAAAE,EAAY,YAAAD,CAAY,CAAC,EACtEH,CACT,CACF,CACN,CACF","names":["src_exports","__export","webUpdateNotice","__toCommonJS","import_fs","import_path","import_core","injectPluginHtml","html","version","options","cssFileHash","jsFileHash","customNotificationHTML","hiddenDefaultNotification","injectFileBase","versionScript","cssLinkHtml","res","viteConfig","versionType","customVersion","silence","cssFileSource","jsFileSource","resolvedConfig","_","bundle","chunk"]}